name: PR Validation
on:
  push:
    branches: [ main ]      
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '20 22 * * 5'

env:
  PYTHON_VERSION: 3.8

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
  validation:
    name: PR Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure Python Version
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        pip install -r requirements.txt

    - name: Test pytest
      run: |
        pytest --doctest-modules --junitxml=reports/test-results.xml --cov=./ --cov-report=xml:reports/coverage.xml --cov-config=.coveragerc

    - uses: testspace-com/setup-testspace@v1
      name: Install Testspace
      with:
        domain: hpettenuci
        token: ${{ secrets.TESTSPACE_TOKEN }}

    - name: Push result to Testspace server
      run: |
        testspace reports/*.xml

    - name: Upload to Codecov
      uses: codecov/codecov-action@v1.3.2
      with:
        token: ${{ secrets.CODEDOV_TOKEN }}
        directory: reports
        flags: pytest
        fail_ci_if_error: false